{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\general\\\\blog-frontend\\\\src\\\\components\\\\postbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostBox() {\n  _s();\n\n  const [title, setTitle] = useState();\n  const [username, setUsername] = useState();\n  const [content, setContent] = useState();\n\n  const handleTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handleContentChange = event => {\n    setContent(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: this.title,\n        username: this.username,\n        content: this.content\n      })\n    };\n    fetch('https://serverless-api.peerapongsm.workers.dev/', requestOptions).then(response => response.json()).then(data => this.setState({\n      postId: data.id\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        '& > :not(style)': {\n          m: 1,\n          width: '95%'\n        },\n        background: \"moccasin\"\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"user-title\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"title\",\n          label: \"Title\",\n          variant: \"outlined\",\n          value: title,\n          fullWidth: true,\n          onChange: handleTitleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"username\",\n          label: \"Username\",\n          variant: \"outlined\",\n          value: username,\n          onChange: handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        '& > :not(style)': {\n          m: 1.5,\n          width: '98%'\n        },\n        background: \"moccasin\"\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"content\",\n        label: \"Write something for the world!\",\n        multiline: true,\n        rows: 3,\n        value: content,\n        onChange: handleContentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      fullWidth: true,\n      sx: {\n        marginTop: 1.5\n      },\n      children: \"Post it!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostBox, \"A02b+1+Nqs8np3aTcf3R9WabSGw=\");\n\n_c = PostBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBox\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/general/blog-frontend/src/components/postbox.js"],"names":["React","useState","Box","TextField","Button","PostBox","title","setTitle","username","setUsername","content","setContent","handleTitleChange","event","target","value","handleUsernameChange","handleContentChange","handleSubmit","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","setState","postId","id","m","width","background","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;;AAEA,QAAMW,iBAAiB,GAAIC,KAAD,IAAW;AACnCN,IAAAA,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIH,KAAD,IAAW;AACtCJ,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAIA,QAAME,mBAAmB,GAAIJ,KAAD,IAAW;AACrCF,IAAAA,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAIL,KAAD,IAAW;AAC9B,UAAMM,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBlB,QAAAA,KAAK,EAAE,KAAKA,KADO;AAEnBE,QAAAA,QAAQ,EAAE,KAAKA,QAFI;AAGnBE,QAAAA,OAAO,EAAE,KAAKA;AAHK,OAAf;AAHa,KAAvB;AASAe,IAAAA,KAAK,CAAC,iDAAD,EAAoDN,cAApD,CAAL,CACKO,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEC,MAAAA,MAAM,EAAEF,IAAI,CAACG;AAAf,KAAd,CAFlB;AAGD,GAbD;;AAeA,sBACE;AAAA,4BACA,QAAC,GAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,EAAE,EAAE;AACF,2BAAmB;AAAEC,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,KAAK,EAAE;AAAf,SADjB;AAEFC,QAAAA,UAAU,EAAE;AAFV,OAFN;AAME,MAAA,UAAU,MANZ;AAOE,MAAA,YAAY,EAAC,KAPf;AAAA,6BASE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,OAAd;AAAsB,UAAA,KAAK,EAAC,OAA5B;AAAoC,UAAA,OAAO,EAAC,UAA5C;AAAuD,UAAA,KAAK,EAAE7B,KAA9D;AAAqE,UAAA,SAAS,MAA9E;AAA+E,UAAA,QAAQ,EAAEM;AAAzF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,UAAd;AAAyB,UAAA,KAAK,EAAC,UAA/B;AAA0C,UAAA,OAAO,EAAC,UAAlD;AAA6D,UAAA,KAAK,EAAEJ,QAApE;AAA8E,UAAA,QAAQ,EAAEQ;AAAxF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YADA,eAgBA,QAAC,GAAD;AACA,MAAA,SAAS,EAAC,MADV;AAEA,MAAA,EAAE,EAAE;AACF,2BAAmB;AAAEiB,UAAAA,CAAC,EAAE,GAAL;AAAUC,UAAAA,KAAK,EAAE;AAAjB,SADjB;AAEFC,QAAAA,UAAU,EAAE;AAFV,OAFJ;AAMA,MAAA,UAAU,MANV;AAOA,MAAA,YAAY,EAAC,KAPb;AAAA,6BASA,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,SADP;AAEI,QAAA,KAAK,EAAC,gCAFV;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,IAAI,EAAE,CAJV;AAKI,QAAA,KAAK,EAAEzB,OALX;AAMI,QAAA,QAAQ,EAAEO;AANd;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA,YAhBA,eAkCA,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,SAAS,MAArC;AAAsC,MAAA,EAAE,EAAE;AAACmB,QAAAA,SAAS,EAAE;AAAZ,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCA;AAAA,kBADF;AAsCD;;GAtEuB/B,O;;KAAAA,O","sourcesContent":["import React, { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button'\r\n\r\nexport default function PostBox() {\r\n  const [title, setTitle] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [content, setContent] = useState();\r\n\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handleContentChange = (event) => {\r\n    setContent(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          title: this.title,\r\n          username: this.username,\r\n          content: this.content\r\n        })\r\n    };\r\n    fetch('https://serverless-api.peerapongsm.workers.dev/', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ postId: data.id }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& > :not(style)': { m: 1, width: '95%' },\r\n        background: \"moccasin\"\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n      <div id=\"user-title\">\r\n        <TextField id=\"title\" label=\"Title\" variant=\"outlined\" value={title} fullWidth onChange={handleTitleChange}/>\r\n        <div id=\"divider\"/>\r\n        <TextField id=\"username\" label=\"Username\" variant=\"outlined\" value={username} onChange={handleUsernameChange}/>\r\n      </div>\r\n    </Box>\r\n    <Box\r\n    component=\"form\"\r\n    sx={{\r\n      '& > :not(style)': { m: 1.5, width: '98%' },\r\n      background: \"moccasin\"\r\n    }}\r\n    noValidate\r\n    autoComplete=\"off\"\r\n    >\r\n    <TextField\r\n        id=\"content\"\r\n        label=\"Write something for the world!\"\r\n        multiline\r\n        rows={3}\r\n        value={content}\r\n        onChange={handleContentChange}\r\n        />\r\n    </Box>\r\n    <Button variant=\"contained\" fullWidth sx={{marginTop: 1.5}}>Post it!</Button>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}